/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin, padding, & font */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a {
    color: inherit; 
    text-decoration: inherit;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

.react-flow__pane {
  cursor: default;
}

/* Add this CSS to your existing stylesheet */

:root {
  --duration: 1500ms;
  --timing-fn: ease-in-out;
}

.grid-box {
  perspective: 400px;
  position: relative;
  overflow: hidden;
}

.info {
  transform: rotate3d(1,0,0, 90deg);
  width: 100%;
  height: 100%;
  padding: 20px;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 4px;
  pointer-events: none;
  mix-blend-mode: exclusion;
}

.in-top .info {
  transform-origin: 50% 0%;
  animation: in-top var(--duration) var(--timing-fn) 0ms 1 forwards;
}
.in-right .info {
  transform-origin: 100% 0%;
  animation: in-right var(--duration) var(--timing-fn) 0ms 1 forwards;
}
.in-bottom .info {
  transform-origin: 50% 100%;
  animation: in-bottom var(--duration) var(--timing-fn) 0ms 1 forwards;
}
.in-left .info {
  transform-origin: 0% 0%;
  animation: in-left var(--duration) var(--timing-fn) 0ms 1 forwards;
}

.out-top .info {
  transform-origin: 50% 0%;
  animation: out-top var(--duration) var(--timing-fn) 0ms 1 forwards;
}
.out-right .info {
  transform-origin: 100% 50%;
  animation: out-right var(--duration) var(--timing-fn) 0ms 1 forwards;
}
.out-bottom .info {
  transform-origin: 50% 100%;
  animation: out-bottom var(--duration) var(--timing-fn) 0ms 1 forwards;
}
.out-left .info {
  transform-origin: 0% 0%;
  animation: out-left var(--duration) var(--timing-fn) 0ms 1 forwards;
}

@keyframes in-top {
  from {transform: rotate3d(-1,0,0, 90deg)}
  to   {transform: rotate3d(0,0,0, 0deg)}
}
@keyframes in-right {
  from {transform: rotate3d(0,-1,0, 90deg)}
  to   {transform: rotate3d(0,0,0, 0deg)}
}
@keyframes in-bottom {
  from {transform: rotate3d(1,0,0, 90deg)}
  to   {transform: rotate3d(0,0,0, 0deg)}
}
@keyframes in-left {
  from {transform: rotate3d(0,1,0, 90deg)}
  to   {transform: rotate3d(0,0,0, 0deg)}
}

@keyframes out-top {
  from {transform: rotate3d(0,0,0, 0deg)}
  to   {transform: rotate3d(-1,0,0, 104deg)}
}
@keyframes out-right {
  from {transform: rotate3d(0,0,0, 0deg)}
  to   {transform: rotate3d(0,-1,0, 104deg)}
}
@keyframes out-bottom {
  from {transform: rotate3d(0,0,0, 0deg)}
  to   {transform: rotate3d(1,0,0, 104deg)}
}
@keyframes out-left {
  from {transform: rotate3d(0,0,0, 0deg)}
  to   {transform: rotate3d(0,1,0, 104deg)}
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
